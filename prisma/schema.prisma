generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id     String  @id @default(uuid())
  email  String  @unique
  name   String?
  avatar String?

  profile Profile?
  words   Word[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Profile {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  volcanoAccessKeyId String? @map("volcano_access_key_id")
  volcanoSecretKey   String? @map("volcano_secret_key")

  deepLAuthKey String? @map("deep_l_auth_key")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Dictionary {
  id   String @id @default(uuid())
  word String @unique
  sw   String

  ukPhonetic String @map("uk_phonetic")
  usPhonetic String @map("us_phonetic")
  ukSpeech   String @map("uk_speech")
  usSpeech   String @map("us_speech")

  forms      DictionaryForm[]
  translates DictionaryTranslate[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model DictionaryForm {
  id    String @id @default(uuid())
  word  String
  name  String
  value String

  dictionary   Dictionary? @relation(fields: [dictionaryId], references: [id])
  dictionaryId String?     @map("dictionary_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model DictionaryTranslate {
  id   String @id @default(uuid())
  word String

  translate String
  position  String

  dictionary   Dictionary? @relation(fields: [dictionaryId], references: [id])
  dictionaryId String?     @map("dictionary_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Word {
  id   String @id @default(uuid())
  word String @unique

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
